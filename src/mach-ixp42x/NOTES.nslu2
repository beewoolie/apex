==========
  NOTES
  NSLU2
==========

2005.Feb.24

  o Some improvement to the SDRAM init selection.  I think it might be
    better to config the number of bits per chip since that's
    something clear from the chip datasheet.

2005.Feb.16

  o There appears to be an unresolved issue with the boot process.  In
    one case, a user found that the startup copy command was copying
    the kernel to RAM incorrectly.  There has been no resolution of
    the issue, but it turns out that copying a second time works
    correctly.  

2005.Feb.14

  o Need to tell people how to download the intel libraries to link in
    the NPE code.

2005.Feb.03

  o Byte accesses to flash will generate an unaligned access fault
    o I haven't looked into whether or not there is a CPU flag to fix
      this.  
    o Even redboot has this problem.  (Actually, it doesn't)
  o There is a bit in the UART interrupt enable register to active the
    UART.  Kinda sucky place for it.
  o The IXP420 will thrown an exception if SDRAM is accessed outside
    of the available region.
    o We may be able to probe the space if we install an exception
      handler.
  o Discovered that redboot was leaving the MMU on when it jumped to
    APEX.   APEX will now disable the MMU when it starts. 
    o This fixes the problem of not being able to download APEX to low
      memory and jump to it.
    o This does *not* fix the fact that flash needs to be read 16 bits
      at a time.
  o Booting looks like we need to copy the kernel to low memory:
    o Simple enough.  Added to the standard config paths. 
    o Handling the ramdisk, too
  o Fixed the alignment problem with flash.  A typo in the register
    macros meant that a wrong bit was being set and an important one
    was missing.
  o APEX will now boot the kernel.  It copies the kernel and ramdisk
    down to RAM and then jumps to the kernel.
    o There is an apparent problem in the startup.  The kernel dumps
      registers early on. 
	Uncompressing Linux........................................................... done, booting the kernel.
	690541F1:000000F5:00001AF8
	000F4E24-002B30A4>00008000
	002B30A4
	00008000: E1A0C000 E3A000D3 E121F000 EB000048  E33A0000 03A00070 0A000043 EB000058
	00008020: E3370000 03A00061 0A00003F EB00001F  E28FE01C E28AF00C C0008080 C01C6280
	00008040: C01EBC34 C01C6FEC C01C6FE0 C01BAD14  C01BA000 E51FE024 EE010F10 EE110F10
	00008060: E1A00000 E1A00000 E1A0F00E 00000000  00000000 00000000 00000000 00000000
	00008080: E24F304C E89321F0 E3A0B000 E1540005  3484B004 3AFFFFFC E5869000 E5871000
	000080A0: E3800002 E3C02002 E8880005 EA000132  E24F40B8 E2444901 E1A00004 E3A03000
	000080C0: E2802901 E4803004 E4803004 E4803004  E4803004 E1300002 1AFFFFF9 E3C42AFF
	000080E0: E0883002 E7843922 E2840A03 E3C3260F  E5802000 E2800000 E4803004 E2833601
	Linux version 2.4.22-xfs (root@sure_linux) (gcc version 3.2.1) #377 Fri Jul 2 09:02:32 CST 2004
	CPU: XScale-IXP425/IXC1100 revision 1
	Machine: Intel IXDP425 Development Platform

Here is another example.

apex> boot -g 0x300000
Booting kernel at 0x00300000...
Uncompressing Linux........................................................... .

690541F1:000000F5:00001AFA
003ECE24-005AB0A4>00008000
005AB0A4
00008000: E1A0C000 E3A000D3 E121F000 EB000048  E33A0000 03A00070 0A000043 EB0008
00008020: E3370000 03A00061 0A00003F EB00001F  E28FE01C E28AF00C C0008080 C01C60
00008040: C01EBC34 C01C6FEC C01C6FE0 C01BAD14  C01BA000 E51FE024 EE010F10 EE1100
00008060: E1A00000 E1A00000 E1A0F00E 00000000  00000000 00000000 00000000 000000
00008080: E24F304C E89321F0 E3A0B000 E1540005  3484B004 3AFFFFFC E5869000 E58710
000080A0: E3800002 E3C02002 E8880005 EA000132  E24F40B8 E2444901 E1A00004 E3A030
000080C0: E2802901 E4803004 E4803004 E4803004  E4803004 E1300002 1AFFFFF9 E3C42F
000080E0: E0883002 E7843922 E2840A03 E3C3260F  E5802000 E2800000 E4803004 E28331
Linux version 2.4.22-xfs (root@sure_linux) (gcc version 3.2.1) #377 Fri Jul 2 04
CPU: XScale-IXP425/IXC1100 revision 1
Machine: Intel IXDP425 Development Platform


    o I'm guessing that there is something small wrong with the
      startup.  Linux runs OK.  I can send and receive network frames.

  o We could add a switch to the copy command that reads the image
    headers and copies only that much data on startup.  It would
    improve the boot-up time slightly.

