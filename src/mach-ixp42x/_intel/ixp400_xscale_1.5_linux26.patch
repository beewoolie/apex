Index: _intel/ixp400_xscale_sw/Makefile
===================================================================
--- _intel.orig/ixp400_xscale_sw/Makefile	2004-11-17 22:36:07.000000000 -0800
+++ _intel/ixp400_xscale_sw/Makefile	2005-03-08 16:46:26.695499339 -0800
@@ -222,10 +222,12 @@
 else # IX_TARGET_OS == vxworks
 
 # Linux tool names
-ifeq ($(IX_TARGET), linuxbe)
-LINUX_CROSS_COMPILE := $(HARDHAT_BASE)/devkit/arm/xscale_be/bin/xscale_be-
-else
-LINUX_CROSS_COMPILE := $(HARDHAT_BASE)/devkit/arm/xscale_le/bin/xscale_le-
+ifeq "$(LINUX_CROSS_COMPILE)" "" 
+ ifeq ($(IX_TARGET), linuxbe)
+  LINUX_CROSS_COMPILE := $(HARDHAT_BASE)/devkit/arm/xscale_be/bin/xscale_be-
+ else
+  LINUX_CROSS_COMPILE := $(HARDHAT_BASE)/devkit/arm/xscale_le/bin/xscale_le-
+ endif
 endif
 
 LD := $(LINUX_CROSS_COMPILE)ld
@@ -253,7 +255,9 @@
 
 LINUX_MACH_CFLAGS := -D__LINUX_ARM_ARCH__=5 -mcpu=xscale -mtune=xscale
 
-CFLAGS := -D__KERNEL__ -I$(LINUX_SRC)/include -Wall -Wno-trigraphs -fno-common -pipe -mapcs-32 -mshort-load-bytes -msoft-float -DMODULE -Isrc/include -I$(NPE_OUTPUT_DIR) -D__linux -DCPU=33 -DXSCALE=33 $(LINUX_MACH_CFLAGS)
+CFLAGS := -D__KERNEL__ -I$(LINUX_SRC)/include -Wall -Wno-trigraphs -fno-common -pipe -mapcs-32 -msoft-float -DMODULE -Isrc/include -I$(NPE_OUTPUT_DIR) -D__linux -DCPU=33 -DXSCALE=33 $(LINUX_MACH_CFLAGS)
+
+# -mshort-load-bytes 
 
 # Linux linker flags
 LDFLAGS := -r
Index: _intel/ixp400_xscale_sw/src/ethDB/include/IxEthDB_p.h
===================================================================
--- _intel.orig/ixp400_xscale_sw/src/ethDB/include/IxEthDB_p.h	2004-11-17 22:37:22.000000000 -0800
+++ _intel/ixp400_xscale_sw/src/ethDB/include/IxEthDB_p.h	2005-03-08 16:46:26.696499101 -0800
@@ -633,7 +633,7 @@
 IX_ETH_DB_PUBLIC UINT32 ixEthDBKeyXORHash(void *macAddress);
 
 /* Port updates */
-IX_ETH_DB_PUBLIC IxEthDBStatus ixEthDBNPEUpdateHandler(IxEthDBPortId portID, IxEthDBFeature type);
+IX_ETH_DB_PUBLIC IxEthDBStatus ixEthDBNPEUpdateHandler(IxEthDBPortId portID, IxEthDBRecordType type);
 IX_ETH_DB_PUBLIC void ixEthDBUpdatePortLearningTrees(IxEthDBPortMap triggerPorts);
 IX_ETH_DB_PUBLIC void ixEthDBNPEAccessRequest(IxEthDBPortId portID);
 IX_ETH_DB_PUBLIC void ixEthDBUpdateLock(void);
Index: _intel/ixp400_xscale_sw/src/usb/include/usbprivatetypes.h
===================================================================
--- _intel.orig/ixp400_xscale_sw/src/usb/include/usbprivatetypes.h	2004-11-17 22:37:32.000000000 -0800
+++ _intel/ixp400_xscale_sw/src/usb/include/usbprivatetypes.h	2005-03-08 16:46:26.697498862 -0800
@@ -164,6 +164,53 @@
 } USBEventProcessor;
 
 /*  UDC Registers */
+
+#undef UDCCR
+#undef UDCCS0
+#undef UDCCS1
+#undef UDCCS2
+#undef UDCCS3
+#undef UDCCS4
+#undef UDCCS5
+#undef UDCCS6
+#undef UDCCS7
+#undef UDCCS8
+#undef UDCCS9
+#undef UDCCS10
+#undef UDCCS11
+#undef UDCCS12
+#undef UDCCS13
+#undef UDCCS14
+#undef UDCCS15
+#undef UICR0
+#undef UICR1
+#undef USIR0
+#undef USIR1
+#undef UFNHR
+#undef UFNLR
+#undef UBCR2
+#undef UBCR4
+#undef UBCR7
+#undef UBCR9
+#undef UBCR12
+#undef UBCR14
+#undef UDDR0
+#undef UDDR5
+#undef UDDR10
+#undef UDDR15
+#undef UDDR1
+#undef UDDR2
+#undef UDDR3
+#undef UDDR4
+#undef UDDR6
+#undef UDDR7
+#undef UDDR8
+#undef UDDR9
+#undef UDDR11
+#undef UDDR12
+#undef UDDR13
+#undef UDDR14
+
 typedef struct  /* UDCRegisters */
 {
     volatile UINT32 UDCCR;
@@ -229,6 +276,7 @@
     volatile UINT32	UDDR14;			
 } UDCRegisters;
 
+
 typedef struct /* USBDeviceContext */
 {
     UINT32 checkPattern;                      /* Check pattern for verifying the context */
Index: _intel/ixp400_xscale_sw/src/codelets/dmaAcc/IxDmaAccCodelet_p.h
===================================================================
--- _intel.orig/ixp400_xscale_sw/src/codelets/dmaAcc/IxDmaAccCodelet_p.h	2004-11-17 22:37:08.000000000 -0800
+++ _intel/ixp400_xscale_sw/src/codelets/dmaAcc/IxDmaAccCodelet_p.h	2005-03-08 16:46:26.697498862 -0800
@@ -113,7 +113,7 @@
  * @return IX_FAIL - Error initialising codelet
  */
 IX_STATUS
-ixDmaAccCodeletInit(IxDmaNpeId npeId);
+ixDmaAccCodeletInit(IxNpeDlNpeId npeId);
 
 /**
  * @fn ixDmaAccCodeletTestPerform( UINT16 transferLength, 
Index: _intel/ixp_osal/Makefile
===================================================================
--- _intel.orig/ixp_osal/Makefile	2004-11-17 22:37:37.000000000 -0800
+++ _intel/ixp_osal/Makefile	2005-03-08 16:46:26.698498624 -0800
@@ -172,7 +172,7 @@
 
 # TODO push this to linux make
 ifeq ($(IX_OSAL_MK_HOST_OS), linux)
-INCLUDE_DIRS += $(LINUX_SRC)/include/asm-arm/arch-ixp425/
+INCLUDE_DIRS += $(LINUX_SRC)/include/asm-arm/arch-ixp4xx/
 endif
 
 CFLAGS += $(INCLUDE_DIRS:%=-I%)
Index: _intel/ixp_osal/include/linux-2.6.h
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ _intel/ixp_osal/include/linux-2.6.h	2005-03-08 16:46:26.698498624 -0800
@@ -0,0 +1,65 @@
+/* */
+
+#include "asm/page.h"
+
+#if !defined io_p2v
+/* In the bootloader, physical and virtual addresses are equivalent */
+# define io_p2v(p) p
+#endif
+
+#if !defined (IXP425_TIMER_BASE_PHYS)
+# define IXP425_TIMER_BASE_PHYS 	IXP4XX_TIMER_BASE_PHYS
+#endif
+#if !defined (IRQ_IXP425_XSCALE_PMU)
+# define IRQ_IXP425_XSCALE_PMU		IRQ_IXP4XX_XSCALE_PMU
+#endif
+#if !defined (IXP425_QMGR_BASE_PHYS)
+# define IXP425_QMGR_BASE_PHYS		IXP4XX_QMGR_BASE_PHYS
+#endif
+#if !defined (IXP425_QMGR_BASE_VIRT)
+# define IXP425_QMGR_BASE_VIRT		io_p2v(IXP4XX_QMGR_BASE_PHYS)
+#endif
+#if !defined (IXP425_PERIPHERAL_BASE_PHYS)
+# define IXP425_PERIPHERAL_BASE_PHYS	IXP4XX_PERIPHERAL_BASE_PHYS
+#endif
+#if !defined (IXP425_PERIPHERAL_BASE_VIRT)
+# define IXP425_PERIPHERAL_BASE_VIRT	IXP4XX_PERIPHERAL_BASE_VIRT
+#endif
+#if !defined (IXP425_EXP_CFG_BASE_PHYS)
+# define IXP425_EXP_CFG_BASE_PHYS	IXP4XX_EXP_CFG_BASE_PHYS
+#endif
+#if !defined (IXP425_EXP_CFG_BASE_VIRT)
+# define IXP425_EXP_CFG_BASE_VIRT	IXP4XX_EXP_CFG_BASE_VIRT
+#endif
+#if !defined (IXP425_PCI_CFG_BASE_PHYS)
+# define IXP425_PCI_CFG_BASE_PHYS	IXP4XX_PCI_CFG_BASE_PHYS
+#endif
+#if !defined (IXP425_PCI_CFG_BASE_VIRT)
+# define IXP425_PCI_CFG_BASE_VIRT	IXP4XX_PCI_CFG_BASE_VIRT
+#endif
+#if !defined (IXP425_EXP_BUS_BASE2_PHYS)
+# define IXP425_EXP_BUS_BASE2_PHYS	IXP4XX_EXP_BUS_CS2_BASE_PHYS
+#endif
+#if !defined (IXP425_EthA_BASE_PHYS)
+# define IXP425_EthA_BASE_PHYS		IXP4XX_EthA_BASE_PHYS
+#endif
+#if !defined (IXP425_EthB_BASE_PHYS)
+# define IXP425_EthB_BASE_PHYS		IXP4XX_EthB_BASE_PHYS
+#endif
+#if !defined (IXP425_ICMR)
+# define IXP425_ICMR			IXP4XX_ICMR
+#endif
+#if !defined (IXP425_USB_BASE_PHYS)
+# define IXP425_USB_BASE_PHYS		IXP4XX_USB_BASE_PHYS
+#endif
+#if !defined (IXP425_INTC_BASE_PHYS)
+# define IXP425_INTC_BASE_PHYS		IXP4XX_INTC_BASE_PHYS
+#endif
+#if !defined (IRQ_IXP425_USB)
+# define IRQ_IXP425_USB			IRQ_IXP4XX_USB
+#endif
+
+#if !defined (MOD_CAN_QUERY)
+	/* We don't care about symbol querying  */
+#define MOD_CAN_QUERY(mod) 0
+#endif
Index: _intel/ixp_osal/os/linux/include/platforms/ixp400/IxOsalOsIxp400.h
===================================================================
--- _intel.orig/ixp_osal/os/linux/include/platforms/ixp400/IxOsalOsIxp400.h	2004-11-17 22:37:35.000000000 -0800
+++ _intel/ixp_osal/os/linux/include/platforms/ixp400/IxOsalOsIxp400.h	2005-03-08 16:46:26.699498386 -0800
@@ -53,6 +53,8 @@
 #include "asm/hardware.h"
 #include "asm/arch/irqs.h"
 
+#include <linux-2.6.h>		/* Glue */
+
 /* physical addresses to be used when requesting memory with IX_OSAL_MEM_MAP */
 #define IX_OSAL_IXP400_INTC_PHYS_BASE          IXP425_INTC_BASE_PHYS
 #define IX_OSAL_IXP400_GPIO_PHYS_BASE          IXP425_GPIO_BASE_PHYS
Index: _intel/ixp_osal/os/linux/src/modules/ioMem/IxOsalOsIoMem.c
===================================================================
--- _intel.orig/ixp_osal/os/linux/src/modules/ioMem/IxOsalOsIoMem.c	2004-11-17 22:37:36.000000000 -0800
+++ _intel/ixp_osal/os/linux/src/modules/ioMem/IxOsalOsIoMem.c	2005-03-08 16:46:26.699498386 -0800
@@ -45,6 +45,7 @@
  * -- End Intel Copyright Notice --
  */
 
+#include <asm/page.h>
 #include <asm/io.h>
 #include <linux/ioport.h>
 
Index: _intel/ixp_osal/os/linux/src/core/IxOsalOsThread.c
===================================================================
--- _intel.orig/ixp_osal/os/linux/src/core/IxOsalOsThread.c	2004-11-17 22:37:35.000000000 -0800
+++ _intel/ixp_osal/os/linux/src/core/IxOsalOsThread.c	2005-03-08 16:46:26.700498147 -0800
@@ -65,12 +65,10 @@
     void *arg = IxOsalOsThreadData.arg;
     static int seq = 0;
 
-    daemonize ();
+    daemonize ("IxOsal %d", ++seq);
 
     exit_files (current);
 
-    snprintf(current->comm, sizeof(current->comm), "IxOsal %d", ++seq);
-
     up (&IxOsalThreadMutex);
 
     entryPoint (arg);
Index: _intel/ixp_osal/os/linux/make/macros.mk
===================================================================
--- _intel.orig/ixp_osal/os/linux/make/macros.mk	2004-11-17 22:37:35.000000000 -0800
+++ _intel/ixp_osal/os/linux/make/macros.mk	2005-03-08 16:46:26.700498147 -0800
@@ -71,10 +71,12 @@
 ################################################################
 # Linux Compiler & linker commands
 
-ifeq ($(IX_OSAL_MK_TARGET_ENDIAN), linuxbe)
-LINUX_CROSS_COMPILE := $(HARDHAT_BASE)/devkit/arm/xscale_be/bin/xscale_be-
-else
-LINUX_CROSS_COMPILE := $(HARDHAT_BASE)/devkit/arm/xscale_le/bin/xscale_le-
+ifeq "$(LINUX_CROSS_COMPILE)" "" 
+ ifeq ($(IX_OSAL_MK_TARGET_ENDIAN), linuxbe)
+  LINUX_CROSS_COMPILE := $(HARDHAT_BASE)/devkit/arm/xscale_be/bin/xscale_be-
+ else
+  LINUX_CROSS_COMPILE := $(HARDHAT_BASE)/devkit/arm/xscale_le/bin/xscale_le-
+ endif
 endif
 
 LINUX_SRC := $($(IX_TARGET)_KERNEL_DIR)
@@ -91,9 +93,11 @@
 LINUX_MACH_CFLAGS := -D__LINUX_ARM_ARCH__=5 -mcpu=xscale -mtune=xscale
 
 CFLAGS := -D__KERNEL__ -I$(LINUX_SRC)/include -Wall -Wno-trigraphs -fno-common \
-          -pipe -mapcs-32 -mshort-load-bytes -msoft-float -DMODULE \
+          -pipe -mapcs-32 -msoft-float -DMODULE \
           -D__linux -DCPU=33 -DXSCALE=33 $(LINUX_MACH_CFLAGS) -DEXPORT_SYMTAB
 
+# -mshort-load-bytes
+
 # Linux linker flags
 LDFLAGS := -r
 
Index: _intel/ixp_osal/os/linux/src/core/IxOsalOsMsgQ.c
===================================================================
--- _intel.orig/ixp_osal/os/linux/src/core/IxOsalOsMsgQ.c	2004-11-17 22:37:35.000000000 -0800
+++ _intel/ixp_osal/os/linux/src/core/IxOsalOsMsgQ.c	2005-03-08 16:46:26.701497909 -0800
@@ -45,9 +45,9 @@
  * -- End Intel Copyright Notice --
  */
 #include <linux/linkage.h>
+#include <linux/spinlock.h>
 #include <linux/ipc.h>
 #include <linux/msg.h>
-#include <linux/spinlock.h>
 #include <linux/interrupt.h>
 
 #include "IxOsal.h"
Index: _intel/ixp_osal/os/linux/src/core/IxOsalOsServices.c
===================================================================
--- _intel.orig/ixp_osal/os/linux/src/core/IxOsalOsServices.c	2004-11-17 22:37:35.000000000 -0800
+++ _intel/ixp_osal/os/linux/src/core/IxOsalOsServices.c	2005-03-08 16:46:26.701497909 -0800
@@ -53,6 +53,7 @@
 #include <linux/time.h>
 #include <linux/sched.h>
 #include <linux/slab.h>
+#include <linux/interrupt.h>
 
 #include "IxOsal.h"
 
@@ -88,7 +89,7 @@
 /*
  * General interrupt handler
  */
-static void
+static irqreturn_t
 ixOsalOsIsrProxy (int irq, void *dev_id, struct pt_regs *regs)
 {
     IxOsalInfoType *isr_proxy_info = (IxOsalInfoType *) dev_id;
@@ -97,6 +98,7 @@
 		   "ixOsalOsIsrProxy: Interrupt used before ixOsalIrqBind was invoked");
 
     isr_proxy_info->routine (isr_proxy_info->parameter);
+    return IRQ_HANDLED;
 }
 
 /*
@@ -104,11 +106,12 @@
  * This handler saves the interrupted Program Counter (PC)
  * into a global variable
  */
-static void
+static irqreturn_t
 ixOsalOsIsrProxyWithPC (int irq, void *dev_id, struct pt_regs *regs)
 {
     ixOsalLinuxInterruptedPc = regs->ARM_pc;
     ixOsalOsIsrProxy(irq, dev_id, regs);
+    return IRQ_HANDLED;
 }
 
 /**************************************
Index: _intel/ixp400_xscale_sw/src/perfProfAcc/IxPerfProfAccXscalePmu.c
===================================================================
--- _intel.orig/ixp400_xscale_sw/src/perfProfAcc/IxPerfProfAccXscalePmu.c	2004-11-17 22:36:56.000000000 -0800
+++ _intel/ixp400_xscale_sw/src/perfProfAcc/IxPerfProfAccXscalePmu.c	2005-03-08 16:47:53.906707544 -0800
@@ -2032,6 +2032,9 @@
                                 UINT32 *symbolAddress, 
                                 char *module)
 {
+  /* Removed because it isn't needed for the APEX and it is a bit of
+     trouble to port. */
+#if 0
     UINT32 symbolFound = 0;
     UINT32 count=0;
     UINT32 j=0;
@@ -2094,6 +2097,7 @@
          *symbolAddress = 0;
     }
         
+#endif
 }
 #endif
 
